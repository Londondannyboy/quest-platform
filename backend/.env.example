# Quest Platform v2.2 - Backend Environment Variables
# Copy to .env and fill in actual values

# =============================================================================
# DATABASE (Neon PostgreSQL)
# =============================================================================
DATABASE_URL=postgresql://fastapi_user:YOUR_PASSWORD@ep-xxx.neon.tech:5432/neondb?sslmode=require
NEON_DATABASE_URL=  # Production Neon URL (if different)
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30

# =============================================================================
# REDIS (Upstash or Railway)
# =============================================================================
REDIS_URL=redis://default:YOUR_PASSWORD@redis.upstash.io:6379
UPSTASH_REDIS_URL=  # Production Upstash URL (if different)
REDIS_MAX_CONNECTIONS=50

# ============================================================================
# AI API KEYS
# ============================================================================

# Perplexity (Research Agent)
PERPLEXITY_API_KEY=pplx-your-api-key-here
PERPLEXITY_MODEL=sonar-pro

# Anthropic Claude (Content + Editor Agents)
ANTHROPIC_API_KEY=sk-ant-your-api-key-here
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022

# OpenAI (Embeddings for vector cache)
OPENAI_API_KEY=sk-your-api-key-here
OPENAI_EMBEDDING_MODEL=text-embedding-ada-002

# Replicate (Image Agent - FLUX)
REPLICATE_API_KEY=r8_your-api-key-here
REPLICATE_MODEL=black-forest-labs/flux-schnell

# ============================================================================
# CLOUDINARY (Image CDN)
# ============================================================================
CLOUDINARY_CLOUD_NAME=your-cloud-name
CLOUDINARY_API_KEY=your-api-key
CLOUDINARY_API_SECRET=your-api-secret

# ============================================================================
# COST CONTROLS
# ============================================================================
DAILY_COST_CAP=30.00
PER_JOB_COST_CAP=0.75
ENABLE_COST_CIRCUIT_BREAKER=true

# ============================================================================
# QUEUE CONFIGURATION (BullMQ)
# ============================================================================
QUEUE_NAME=quest-articles
QUEUE_CONCURRENCY=5
QUEUE_MAX_JOBS_PER_MINUTE=10
QUEUE_RETRY_ATTEMPTS=5
QUEUE_RETRY_BACKOFF_MS=2000

# ============================================================================
# CACHE CONFIGURATION
# ============================================================================
RESEARCH_CACHE_ENABLED=true
RESEARCH_CACHE_SIMILARITY_THRESHOLD=0.75
RESEARCH_CACHE_TTL_DAYS=30

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================
APP_ENV=development
DEBUG=true
LOG_LEVEL=INFO
API_PORT=8000
WORKER_PORT=8001

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:4321,https://relocation.quest,https://placement.quest,https://rainmaker.quest

# API rate limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=20

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================

# Sentry (Error tracking)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# Prometheus metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090

# ============================================================================
# DIRECTUS INTEGRATION
# ============================================================================
DIRECTUS_URL=http://localhost:8055
DIRECTUS_API_TOKEN=your-directus-admin-token

# ============================================================================
# FEATURE FLAGS
# ============================================================================
ENABLE_IMAGE_GENERATION=true
ENABLE_HITL_REVIEW=true
ENABLE_AUTO_PUBLISH=false
ENABLE_BATCH_API=true

# ============================================================================
# TESTING
# ============================================================================
TEST_DATABASE_URL=postgresql://fastapi_user:YOUR_PASSWORD@ep-xxx.neon.tech:5432/neondb_test?sslmode=require
MOCK_AI_APIS=false

# Gemini API (for chunked content generation)
GEMINI_API_KEY="your-gemini-api-key-here"  # TODO: Add your actual Gemini API key

